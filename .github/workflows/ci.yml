name: Release

on:
  push:
    branches: [ "master" ]

jobs:
  build-linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Publish
      run: dotnet publish ./src/AksReaderEmulator/AksReaderEmulator.csproj -c Release -r linux-x64 -o ./artifacts/linux-x64 --sc -p:PublishAot=false -p:PublishSingleFile=true -p:PublishTrimmed=true -p:DebugType=none -p:ContinuousIntegrationBuild=true
    - uses: actions/upload-artifact@v4
      with:
        name: linux-x64
        path: ./artifacts/linux-x64

  build-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Publish
      run: dotnet publish ./src/AksReaderEmulator/AksReaderEmulator.csproj -c Release -r win-x64 -o ./artifacts/win-x64 --sc -p:PublishAot=false -p:PublishSingleFile=true -p:PublishTrimmed=true -p:DebugType=none -p:ContinuousIntegrationBuild=true
    - uses: actions/upload-artifact@v4
      with:
        name: win-x64
        path: ./artifacts/win-x64

  build-mac:

    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Publish
      run: dotnet publish ./src/AksReaderEmulator/AksReaderEmulator.csproj -c Release -r osx-arm64 -o ./artifacts/osx-arm64 --sc -p:PublishAot=false -p:PublishSingleFile=true -p:PublishTrimmed=true -p:DebugType=none -p:ContinuousIntegrationBuild=true
    - uses: actions/upload-artifact@v4
      with:
        name: osx-arm64
        path: ./artifacts/osx-arm64


  release:
    needs: [build-linux, build-windows, build-mac]
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Read VersionPrefix
      id: read_version
      shell: pwsh
      run: |
        $dbp = [Xml] (Get-Content .\Directory.Build.props)
        $versionPrefix = $dbp.Project.PropertyGroup.VersionPrefix
        echo "VERSION_PREFIX=$versionPrefix" >> "$env:GITHUB_OUTPUT"
  
    - uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: List downloaded files
      run: find ./artifacts -type f

    - name: Github Release
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_PREFIX: ${{ steps.read_version.outputs.VERSION_PREFIX }}
      run: |
        gh release create v${{ env.VERSION_PREFIX }} --title v${{ env.VERSION_PREFIX }} --generate-notes \
        "./artifacts/win-x64/AksReaderEmulator.exe#AksReaderEmulator-v${{ env.VERSION_PREFIX }}-win-x64.exe" \

